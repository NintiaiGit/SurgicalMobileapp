// Generated by view binder compiler. Do not edit!
package com.sendbird.uikit.samples.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sendbird.uikit.samples.R;
import com.sendbird.uikit.samples.common.widgets.EntryButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EntryButton Complecationnote;

  @NonNull
  public final EntryButton followupplan;

  @NonNull
  public final EntryButton intraoperationfindingnote;

  @NonNull
  public final TextView mainTitle;

  @NonNull
  public final EntryButton operationnote;

  @NonNull
  public final TextView patientInfoTextView;

  @NonNull
  public final EntryButton postoperationnote;

  @NonNull
  public final EntryButton preoperationnote;

  @NonNull
  public final EntryButton viewstandarddocument;

  @NonNull
  public final EntryButton viewsurgicalnote;

  private PatientHomeBinding(@NonNull ScrollView rootView, @NonNull EntryButton Complecationnote,
      @NonNull EntryButton followupplan, @NonNull EntryButton intraoperationfindingnote,
      @NonNull TextView mainTitle, @NonNull EntryButton operationnote,
      @NonNull TextView patientInfoTextView, @NonNull EntryButton postoperationnote,
      @NonNull EntryButton preoperationnote, @NonNull EntryButton viewstandarddocument,
      @NonNull EntryButton viewsurgicalnote) {
    this.rootView = rootView;
    this.Complecationnote = Complecationnote;
    this.followupplan = followupplan;
    this.intraoperationfindingnote = intraoperationfindingnote;
    this.mainTitle = mainTitle;
    this.operationnote = operationnote;
    this.patientInfoTextView = patientInfoTextView;
    this.postoperationnote = postoperationnote;
    this.preoperationnote = preoperationnote;
    this.viewstandarddocument = viewstandarddocument;
    this.viewsurgicalnote = viewsurgicalnote;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Complecationnote;
      EntryButton Complecationnote = ViewBindings.findChildViewById(rootView, id);
      if (Complecationnote == null) {
        break missingId;
      }

      id = R.id.followupplan;
      EntryButton followupplan = ViewBindings.findChildViewById(rootView, id);
      if (followupplan == null) {
        break missingId;
      }

      id = R.id.intraoperationfindingnote;
      EntryButton intraoperationfindingnote = ViewBindings.findChildViewById(rootView, id);
      if (intraoperationfindingnote == null) {
        break missingId;
      }

      id = R.id.mainTitle;
      TextView mainTitle = ViewBindings.findChildViewById(rootView, id);
      if (mainTitle == null) {
        break missingId;
      }

      id = R.id.operationnote;
      EntryButton operationnote = ViewBindings.findChildViewById(rootView, id);
      if (operationnote == null) {
        break missingId;
      }

      id = R.id.patientInfoTextView;
      TextView patientInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (patientInfoTextView == null) {
        break missingId;
      }

      id = R.id.postoperationnote;
      EntryButton postoperationnote = ViewBindings.findChildViewById(rootView, id);
      if (postoperationnote == null) {
        break missingId;
      }

      id = R.id.preoperationnote;
      EntryButton preoperationnote = ViewBindings.findChildViewById(rootView, id);
      if (preoperationnote == null) {
        break missingId;
      }

      id = R.id.viewstandarddocument;
      EntryButton viewstandarddocument = ViewBindings.findChildViewById(rootView, id);
      if (viewstandarddocument == null) {
        break missingId;
      }

      id = R.id.viewsurgicalnote;
      EntryButton viewsurgicalnote = ViewBindings.findChildViewById(rootView, id);
      if (viewsurgicalnote == null) {
        break missingId;
      }

      return new PatientHomeBinding((ScrollView) rootView, Complecationnote, followupplan,
          intraoperationfindingnote, mainTitle, operationnote, patientInfoTextView,
          postoperationnote, preoperationnote, viewstandarddocument, viewsurgicalnote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
